package main.adventOfCode.ms1;

public class Main {

    public static void main(String[] args) {
        String szoveg = "567298753335395619962968394156452864626256711743346154774779392832295864677983248468917415191826" +
                "15516892217561655988984287367821945116278293557184937239613232721364525179874713513818819468835282486116" +
                "11258656199812998632682668749683588515362946994415852337196718476219162124978836537348924591957188827929" +
                "75341788494213384466463696974254771722825573995931635185273159829252983788599278181513187618357846113579" +
                "13152871352435416598537343433766184199527761655448297176769888976841413281383483828826996729578661465247" +
                "59879236555935723655326743713542931693477824289283542468639522271643257212833248165391957686226311246517" +
                "97831925397727666382547914432115571286694625599263487615882285538233145264995328378886324819233824594396" +
                "62691974214745557791351686372632795798428853471522872756798115765943765352261678949812268662229875224157" +
                "85244875882556414956724976341627123557214837873872723618395529735349273241686548287549763993653379539445" +
                "43531969882546528981766329443645819486727862397874598179928378923755524272829133753849861692981726821169" +
                "86492366461278999828395237848377528634588199654851498129591218847718499547232593657781517887199418881286" +
                "18552455879369919511319735525621198185634342538848462461833332917986297445388515717463168515123732455576" +
                "14344745483584956575777332536746976338375767793874831996897131226787161995165726791381724248555977158216" +
                "72957942594412562841683562927855688585271841222312624651936121279616855139138352748238925969237866132997" +
                "47347259254823531262185328274367529265868856512185135329652635938373266759964119863494798222245536758792" +
                "38978981864665528785617353447955136411597681145967712359274737529631366725341369882365521825416819616288" +
                "34373897181677438712163731648654264587942394962248589716948771595912157729383968274352897341658539752675" +
                "21291574436567193473814247981877735223376964125359992555885137816647382139596646856417424617847981855532" +
                "91487225168671939434176432439525455678227742632633144198173755726258176241254484968947228164583595766721" +
                "73843344353915729852282865375743888348356934168214196559674561373954656492492565728665169843183444826849" +
                "36625486311718525523265165";

        int szum = 0;

        //0-(n-1) összeadja
        for (int i = 0; i < szoveg.length() - 1; i++) {

            if (szoveg.charAt(i) == szoveg.charAt(i + 1)) {
                szum += Character.getNumericValue(szoveg.charAt(i));
            }
        }

        //n és 0 vizsgálja meg és ha kell adja hozzá a szumhoz.
        if (szoveg.charAt(szoveg.length() - 1) == szoveg.charAt(0)) {
            szum += Character.getNumericValue(szoveg.charAt(szoveg.length() - 1));
        }

        System.out.println("Az inputban " + szoveg.length() + " szám van.");
        System.out.println("Az 1. feladat megoldása: " + szum);
        System.out.println("*****");

        szum = 0;

        /* n = 12  0,1,2,3,4,5,6,7,8,9         n = 12  0,1,2,3,4,5,6,7,8,9

                0 -> 0 + 6 = 6                       0 -> 0 + 6 = 6
                1 -> 1 + 6 = 7                       1 -> 1 + 6 = 7
                2 -> 2 + 6 = 8                       2 -> 2 + 6 = 8
                3 -> 3 + 6 = 9                       3 -> 3 + 6 = 9
                4 -> 4 + 6 = 10                      4 -> 4 + 6 = 10
                5 -> 5 + 6 = 11                      5 -> 5 + 6 = 11
                6 -> 6 + 6 = 12                      6 -> 6 + 6 = 0
                7 -> 7 + 6 = 13                      7 -> 7 + 6 = 1
                8 -> 8 + 6 = 14                      8 -> 8 + 6 = 2
                9 -> 9 + 6 = 15                      9 -> 9 + 6 = 3
               10 -> 10+                            10 -> 10+ 6 = 4
                                                    11 -> 11+ 6 = 5
               11 ->




         */

        for (int i = 0; i < szoveg.length() / 2 - 1; i++) {

            if (szoveg.charAt(i) == szoveg.charAt(i + szoveg.length() / 2)) {
                szum += Character.getNumericValue(szoveg.charAt(i));
            }
        }




        szum *= 2;

        System.out.println("Az 2. feladat megoldása: " + szum);
        System.out.println("*****");

    }


}
